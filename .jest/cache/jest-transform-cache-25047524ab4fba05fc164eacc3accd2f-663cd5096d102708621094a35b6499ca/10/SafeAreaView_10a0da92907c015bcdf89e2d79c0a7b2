a029805196279d58405e1592c0da77b5
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var Platform = require('../../Utilities/Platform');

var React = require('react');

var View = require('../View/View');

var exported;

if (Platform.OS === 'android') {
  var SafeAreaView = function SafeAreaView(props, forwardedRef) {
    var emulateUnlessSupported = props.emulateUnlessSupported,
        localProps = (0, _objectWithoutProperties2.default)(props, ["emulateUnlessSupported"]);
    return React.createElement(View, (0, _extends2.default)({}, localProps, {
      ref: forwardedRef
    }));
  };

  var SafeAreaViewRef = React.forwardRef(SafeAreaView);
  SafeAreaViewRef.displayName = 'SafeAreaView';
  exported = SafeAreaViewRef;
} else {
  var RCTSafeAreaViewNativeComponent = require('./RCTSafeAreaViewNativeComponent').default;

  var _SafeAreaView = function _SafeAreaView(props, forwardedRef) {
    return React.createElement(RCTSafeAreaViewNativeComponent, (0, _extends2.default)({
      emulateUnlessSupported: true
    }, props, {
      ref: forwardedRef
    }));
  };

  var _SafeAreaViewRef = React.forwardRef(_SafeAreaView);

  _SafeAreaViewRef.displayName = 'SafeAreaView';
  exported = _SafeAreaViewRef;
}

module.exports = exported;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNhZmVBcmVhVmlldy5qcyJdLCJuYW1lcyI6WyJQbGF0Zm9ybSIsInJlcXVpcmUiLCJSZWFjdCIsIlZpZXciLCJleHBvcnRlZCIsIk9TIiwiU2FmZUFyZWFWaWV3IiwicHJvcHMiLCJmb3J3YXJkZWRSZWYiLCJlbXVsYXRlVW5sZXNzU3VwcG9ydGVkIiwibG9jYWxQcm9wcyIsIlNhZmVBcmVhVmlld1JlZiIsImZvcndhcmRSZWYiLCJkaXNwbGF5TmFtZSIsIlJDVFNhZmVBcmVhVmlld05hdGl2ZUNvbXBvbmVudCIsImRlZmF1bHQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFVQSxJQUFNQSxRQUFRLEdBQUdDLE9BQU8sQ0FBQywwQkFBRCxDQUF4Qjs7QUFDQSxJQUFNQyxLQUFLLEdBQUdELE9BQU8sQ0FBQyxPQUFELENBQXJCOztBQUNBLElBQU1FLElBQUksR0FBR0YsT0FBTyxDQUFDLGNBQUQsQ0FBcEI7O0FBVUEsSUFBSUcsUUFBSjs7QUFXQSxJQUFJSixRQUFRLENBQUNLLEVBQVQsS0FBZ0IsU0FBcEIsRUFBK0I7QUFDN0IsTUFBTUMsWUFBWSxHQUFHLFNBQWZBLFlBQWUsQ0FDbkJDLEtBRG1CLEVBRW5CQyxZQUZtQixFQUdoQjtBQUFBLFFBQ0lDLHNCQURKLEdBQzZDRixLQUQ3QyxDQUNJRSxzQkFESjtBQUFBLFFBQytCQyxVQUQvQiwwQ0FDNkNILEtBRDdDO0FBRUgsV0FBTyxvQkFBQyxJQUFELDZCQUFVRyxVQUFWO0FBQXNCLE1BQUEsR0FBRyxFQUFFRjtBQUEzQixPQUFQO0FBQ0QsR0FORDs7QUFRQSxNQUFNRyxlQUFlLEdBQUdULEtBQUssQ0FBQ1UsVUFBTixDQUFpQk4sWUFBakIsQ0FBeEI7QUFDQUssRUFBQUEsZUFBZSxDQUFDRSxXQUFoQixHQUE4QixjQUE5QjtBQUNBVCxFQUFBQSxRQUFRLEdBQUtPLGVBQWI7QUFDRCxDQVpELE1BWU87QUFDTCxNQUFNRyw4QkFBOEIsR0FBR2IsT0FBTyxDQUFDLGtDQUFELENBQVAsQ0FDcENjLE9BREg7O0FBR0EsTUFBTVQsYUFBWSxHQUFHLFNBQWZBLGFBQWUsQ0FDbkJDLEtBRG1CLEVBRW5CQyxZQUZtQixFQUdoQjtBQUNILFdBQ0Usb0JBQUMsOEJBQUQ7QUFDRSxNQUFBLHNCQUFzQixFQUFFO0FBRDFCLE9BRU1ELEtBRk47QUFHRSxNQUFBLEdBQUcsRUFBRUM7QUFIUCxPQURGO0FBT0QsR0FYRDs7QUFhQSxNQUFNRyxnQkFBZSxHQUFHVCxLQUFLLENBQUNVLFVBQU4sQ0FBaUJOLGFBQWpCLENBQXhCOztBQUNBSyxFQUFBQSxnQkFBZSxDQUFDRSxXQUFoQixHQUE4QixjQUE5QjtBQUNBVCxFQUFBQSxRQUFRLEdBQUtPLGdCQUFiO0FBQ0Q7O0FBRURLLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQmIsUUFBakIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmbG93XG4gKiBAZm9ybWF0XG4gKi9cblxuY29uc3QgUGxhdGZvcm0gPSByZXF1aXJlKCcuLi8uLi9VdGlsaXRpZXMvUGxhdGZvcm0nKTtcbmNvbnN0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbmNvbnN0IFZpZXcgPSByZXF1aXJlKCcuLi9WaWV3L1ZpZXcnKTtcblxuaW1wb3J0IHR5cGUge05hdGl2ZUNvbXBvbmVudH0gZnJvbSAnLi4vLi4vUmVuZGVyZXIvc2hpbXMvUmVhY3ROYXRpdmUnO1xuaW1wb3J0IHR5cGUge1ZpZXdQcm9wc30gZnJvbSAnLi4vVmlldy9WaWV3UHJvcFR5cGVzJztcblxudHlwZSBQcm9wcyA9ICRSZWFkT25seTx7fFxuICAuLi5WaWV3UHJvcHMsXG4gIGVtdWxhdGVVbmxlc3NTdXBwb3J0ZWQ/OiBib29sZWFuLFxufH0+O1xuXG5sZXQgZXhwb3J0ZWQ6IENsYXNzPFJlYWN0JENvbXBvbmVudDxQcm9wcz4+IHwgQ2xhc3M8TmF0aXZlQ29tcG9uZW50PFByb3BzPj47XG5cbi8qKlxuICogUmVuZGVycyBuZXN0ZWQgY29udGVudCBhbmQgYXV0b21hdGljYWxseSBhcHBsaWVzIHBhZGRpbmdzIHJlZmxlY3QgdGhlIHBvcnRpb25cbiAqIG9mIHRoZSB2aWV3IHRoYXQgaXMgbm90IGNvdmVyZWQgYnkgbmF2aWdhdGlvbiBiYXJzLCB0YWIgYmFycywgdG9vbGJhcnMsIGFuZFxuICogb3RoZXIgYW5jZXN0b3Igdmlld3MuXG4gKlxuICogTW9yZW92ZXIsIGFuZCBtb3N0IGltcG9ydGFudGx5LCBTYWZlIEFyZWEncyBwYWRkaW5ncyByZWZsZWN0IHBoeXNpY2FsXG4gKiBsaW1pdGF0aW9uIG9mIHRoZSBzY3JlZW4sIHN1Y2ggYXMgcm91bmRlZCBjb3JuZXJzIG9yIGNhbWVyYSBub3RjaGVzIChha2FcbiAqIHNlbnNvciBob3VzaW5nIGFyZWEgb24gaVBob25lIFgpLlxuICovXG5pZiAoUGxhdGZvcm0uT1MgPT09ICdhbmRyb2lkJykge1xuICBjb25zdCBTYWZlQXJlYVZpZXcgPSAoXG4gICAgcHJvcHM6IFByb3BzLFxuICAgIGZvcndhcmRlZFJlZj86ID9SZWFjdC5SZWY8dHlwZW9mIFZpZXc+LFxuICApID0+IHtcbiAgICBjb25zdCB7ZW11bGF0ZVVubGVzc1N1cHBvcnRlZCwgLi4ubG9jYWxQcm9wc30gPSBwcm9wcztcbiAgICByZXR1cm4gPFZpZXcgey4uLmxvY2FsUHJvcHN9IHJlZj17Zm9yd2FyZGVkUmVmfSAvPjtcbiAgfTtcblxuICBjb25zdCBTYWZlQXJlYVZpZXdSZWYgPSBSZWFjdC5mb3J3YXJkUmVmKFNhZmVBcmVhVmlldyk7XG4gIFNhZmVBcmVhVmlld1JlZi5kaXNwbGF5TmFtZSA9ICdTYWZlQXJlYVZpZXcnO1xuICBleHBvcnRlZCA9ICgoU2FmZUFyZWFWaWV3UmVmOiBhbnkpOiBDbGFzczxSZWFjdC5Db21wb25lbnQ8UHJvcHM+Pik7XG59IGVsc2Uge1xuICBjb25zdCBSQ1RTYWZlQXJlYVZpZXdOYXRpdmVDb21wb25lbnQgPSByZXF1aXJlKCcuL1JDVFNhZmVBcmVhVmlld05hdGl2ZUNvbXBvbmVudCcpXG4gICAgLmRlZmF1bHQ7XG5cbiAgY29uc3QgU2FmZUFyZWFWaWV3ID0gKFxuICAgIHByb3BzOiBQcm9wcyxcbiAgICBmb3J3YXJkZWRSZWY/OiA/UmVhY3QuUmVmPHR5cGVvZiBSQ1RTYWZlQXJlYVZpZXdOYXRpdmVDb21wb25lbnQ+LFxuICApID0+IHtcbiAgICByZXR1cm4gKFxuICAgICAgPFJDVFNhZmVBcmVhVmlld05hdGl2ZUNvbXBvbmVudFxuICAgICAgICBlbXVsYXRlVW5sZXNzU3VwcG9ydGVkPXt0cnVlfVxuICAgICAgICB7Li4ucHJvcHN9XG4gICAgICAgIHJlZj17Zm9yd2FyZGVkUmVmfVxuICAgICAgLz5cbiAgICApO1xuICB9O1xuXG4gIGNvbnN0IFNhZmVBcmVhVmlld1JlZiA9IFJlYWN0LmZvcndhcmRSZWYoU2FmZUFyZWFWaWV3KTtcbiAgU2FmZUFyZWFWaWV3UmVmLmRpc3BsYXlOYW1lID0gJ1NhZmVBcmVhVmlldyc7XG4gIGV4cG9ydGVkID0gKChTYWZlQXJlYVZpZXdSZWY6IGFueSk6IENsYXNzPE5hdGl2ZUNvbXBvbmVudDxQcm9wcz4+KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRlZDtcbiJdfQ==