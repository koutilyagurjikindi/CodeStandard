e78a8422729f3b7c3af2f11904740c8e
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _Colors = _interopRequireDefault(require("./Colors"));

var _openURLInBrowser = _interopRequireDefault(require("react-native/Libraries/Core/Devtools/openURLInBrowser"));

var _reactNative = require("react-native");

var _react = _interopRequireDefault(require("react"));

var links = [{
  title: 'The Basics',
  link: 'https://facebook.github.io/react-native/docs/tutorial',
  description: 'Explains a Hello World for React Native.'
}, {
  title: 'Style',
  link: 'https://facebook.github.io/react-native/docs/style',
  description: 'Covers how to use the prop named style which controls the visuals.'
}, {
  title: 'Layout',
  link: 'https://facebook.github.io/react-native/docs/flexbox',
  description: 'React Native uses flexbox for layout, learn how it works.'
}, {
  title: 'Components',
  link: 'https://facebook.github.io/react-native/docs/components-and-apis',
  description: 'The full list of components and APIs inside React Native.'
}, {
  title: 'Navigation',
  link: 'https://facebook.github.io/react-native/docs/navigation',
  description: 'How to handle moving between screens inside your application.'
}, {
  title: 'Networking',
  link: 'https://facebook.github.io/react-native/docs/network',
  description: 'How to use the Fetch API in React Native.'
}, {
  title: 'Help',
  link: 'https://facebook.github.io/react-native/help',
  description: 'Need more help? There are many other React Native developers who may have the answer.'
}, {
  title: 'Follow us on Twitter',
  link: 'https://twitter.com/reactnative',
  description: 'Stay in touch with the community, join in on Q&As and more by following React Native on Twitter.'
}];

var LinkList = function LinkList() {
  return _react.default.createElement(_reactNative.View, {
    style: styles.container
  }, links.map(function (item, index) {
    return _react.default.createElement(_react.default.Fragment, {
      key: index
    }, _react.default.createElement(_reactNative.View, {
      style: styles.separator
    }), _react.default.createElement(_reactNative.TouchableOpacity, {
      accessibilityRole: 'button',
      onPress: function onPress() {
        return (0, _openURLInBrowser.default)(item.link);
      },
      style: styles.linkContainer
    }, _react.default.createElement(_reactNative.Text, {
      style: styles.link
    }, item.title), _react.default.createElement(_reactNative.Text, {
      style: styles.description
    }, item.description)));
  }));
};

var styles = _reactNative.StyleSheet.create({
  container: {
    marginTop: 32,
    paddingHorizontal: 24
  },
  linkContainer: {
    flexWrap: 'wrap',
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    paddingVertical: 8
  },
  link: {
    flex: 2,
    fontSize: 18,
    fontWeight: '400',
    color: _Colors.default.primary
  },
  description: {
    flex: 3,
    paddingVertical: 16,
    fontWeight: '400',
    fontSize: 18,
    color: _Colors.default.dark
  },
  separator: {
    backgroundColor: _Colors.default.light,
    height: 1
  }
});

var _default = LinkList;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkxlYXJuTW9yZUxpbmtzLmpzIl0sIm5hbWVzIjpbImxpbmtzIiwidGl0bGUiLCJsaW5rIiwiZGVzY3JpcHRpb24iLCJMaW5rTGlzdCIsInN0eWxlcyIsImNvbnRhaW5lciIsIm1hcCIsIml0ZW0iLCJpbmRleCIsInNlcGFyYXRvciIsImxpbmtDb250YWluZXIiLCJTdHlsZVNoZWV0IiwiY3JlYXRlIiwibWFyZ2luVG9wIiwicGFkZGluZ0hvcml6b250YWwiLCJmbGV4V3JhcCIsImZsZXhEaXJlY3Rpb24iLCJqdXN0aWZ5Q29udGVudCIsImFsaWduSXRlbXMiLCJwYWRkaW5nVmVydGljYWwiLCJmbGV4IiwiZm9udFNpemUiLCJmb250V2VpZ2h0IiwiY29sb3IiLCJDb2xvcnMiLCJwcmltYXJ5IiwiZGFyayIsImJhY2tncm91bmRDb2xvciIsImxpZ2h0IiwiaGVpZ2h0Il0sIm1hcHBpbmdzIjoiQUFVQTs7Ozs7Ozs7O0FBQ0E7O0FBRUE7O0FBQ0E7O0FBQ0E7O0FBRUEsSUFBTUEsS0FBSyxHQUFHLENBQ1o7QUFDRUMsRUFBQUEsS0FBSyxFQUFFLFlBRFQ7QUFFRUMsRUFBQUEsSUFBSSxFQUFFLHVEQUZSO0FBR0VDLEVBQUFBLFdBQVcsRUFBRTtBQUhmLENBRFksRUFNWjtBQUNFRixFQUFBQSxLQUFLLEVBQUUsT0FEVDtBQUVFQyxFQUFBQSxJQUFJLEVBQUUsb0RBRlI7QUFHRUMsRUFBQUEsV0FBVyxFQUNUO0FBSkosQ0FOWSxFQVlaO0FBQ0VGLEVBQUFBLEtBQUssRUFBRSxRQURUO0FBRUVDLEVBQUFBLElBQUksRUFBRSxzREFGUjtBQUdFQyxFQUFBQSxXQUFXLEVBQUU7QUFIZixDQVpZLEVBaUJaO0FBQ0VGLEVBQUFBLEtBQUssRUFBRSxZQURUO0FBRUVDLEVBQUFBLElBQUksRUFBRSxrRUFGUjtBQUdFQyxFQUFBQSxXQUFXLEVBQUU7QUFIZixDQWpCWSxFQXNCWjtBQUNFRixFQUFBQSxLQUFLLEVBQUUsWUFEVDtBQUVFQyxFQUFBQSxJQUFJLEVBQUUseURBRlI7QUFHRUMsRUFBQUEsV0FBVyxFQUNUO0FBSkosQ0F0QlksRUE0Qlo7QUFDRUYsRUFBQUEsS0FBSyxFQUFFLFlBRFQ7QUFFRUMsRUFBQUEsSUFBSSxFQUFFLHNEQUZSO0FBR0VDLEVBQUFBLFdBQVcsRUFBRTtBQUhmLENBNUJZLEVBaUNaO0FBQ0VGLEVBQUFBLEtBQUssRUFBRSxNQURUO0FBRUVDLEVBQUFBLElBQUksRUFBRSw4Q0FGUjtBQUdFQyxFQUFBQSxXQUFXLEVBQ1Q7QUFKSixDQWpDWSxFQXVDWjtBQUNFRixFQUFBQSxLQUFLLEVBQUUsc0JBRFQ7QUFFRUMsRUFBQUEsSUFBSSxFQUFFLGlDQUZSO0FBR0VDLEVBQUFBLFdBQVcsRUFDVDtBQUpKLENBdkNZLENBQWQ7O0FBK0NBLElBQU1DLFFBQVEsR0FBRyxTQUFYQSxRQUFXO0FBQUEsU0FDZiw2QkFBQyxpQkFBRDtBQUFNLElBQUEsS0FBSyxFQUFFQyxNQUFNLENBQUNDO0FBQXBCLEtBQ0dOLEtBQUssQ0FBQ08sR0FBTixDQUFVLFVBQUNDLElBQUQsRUFBT0MsS0FBUCxFQUFpQjtBQUMxQixXQUNFLDZCQUFDLGNBQUQsQ0FBTyxRQUFQO0FBQWdCLE1BQUEsR0FBRyxFQUFFQTtBQUFyQixPQUNFLDZCQUFDLGlCQUFEO0FBQU0sTUFBQSxLQUFLLEVBQUVKLE1BQU0sQ0FBQ0s7QUFBcEIsTUFERixFQUVFLDZCQUFDLDZCQUFEO0FBQ0UsTUFBQSxpQkFBaUIsRUFBRSxRQURyQjtBQUVFLE1BQUEsT0FBTyxFQUFFO0FBQUEsZUFBTSwrQkFBaUJGLElBQUksQ0FBQ04sSUFBdEIsQ0FBTjtBQUFBLE9BRlg7QUFHRSxNQUFBLEtBQUssRUFBRUcsTUFBTSxDQUFDTTtBQUhoQixPQUlFLDZCQUFDLGlCQUFEO0FBQU0sTUFBQSxLQUFLLEVBQUVOLE1BQU0sQ0FBQ0g7QUFBcEIsT0FBMkJNLElBQUksQ0FBQ1AsS0FBaEMsQ0FKRixFQUtFLDZCQUFDLGlCQUFEO0FBQU0sTUFBQSxLQUFLLEVBQUVJLE1BQU0sQ0FBQ0Y7QUFBcEIsT0FBa0NLLElBQUksQ0FBQ0wsV0FBdkMsQ0FMRixDQUZGLENBREY7QUFZRCxHQWJBLENBREgsQ0FEZTtBQUFBLENBQWpCOztBQW1CQSxJQUFNRSxNQUFNLEdBQUdPLHdCQUFXQyxNQUFYLENBQWtCO0FBQy9CUCxFQUFBQSxTQUFTLEVBQUU7QUFDVFEsSUFBQUEsU0FBUyxFQUFFLEVBREY7QUFFVEMsSUFBQUEsaUJBQWlCLEVBQUU7QUFGVixHQURvQjtBQUsvQkosRUFBQUEsYUFBYSxFQUFFO0FBQ2JLLElBQUFBLFFBQVEsRUFBRSxNQURHO0FBRWJDLElBQUFBLGFBQWEsRUFBRSxLQUZGO0FBR2JDLElBQUFBLGNBQWMsRUFBRSxlQUhIO0FBSWJDLElBQUFBLFVBQVUsRUFBRSxRQUpDO0FBS2JDLElBQUFBLGVBQWUsRUFBRTtBQUxKLEdBTGdCO0FBWS9CbEIsRUFBQUEsSUFBSSxFQUFFO0FBQ0ptQixJQUFBQSxJQUFJLEVBQUUsQ0FERjtBQUVKQyxJQUFBQSxRQUFRLEVBQUUsRUFGTjtBQUdKQyxJQUFBQSxVQUFVLEVBQUUsS0FIUjtBQUlKQyxJQUFBQSxLQUFLLEVBQUVDLGdCQUFPQztBQUpWLEdBWnlCO0FBa0IvQnZCLEVBQUFBLFdBQVcsRUFBRTtBQUNYa0IsSUFBQUEsSUFBSSxFQUFFLENBREs7QUFFWEQsSUFBQUEsZUFBZSxFQUFFLEVBRk47QUFHWEcsSUFBQUEsVUFBVSxFQUFFLEtBSEQ7QUFJWEQsSUFBQUEsUUFBUSxFQUFFLEVBSkM7QUFLWEUsSUFBQUEsS0FBSyxFQUFFQyxnQkFBT0U7QUFMSCxHQWxCa0I7QUF5Qi9CakIsRUFBQUEsU0FBUyxFQUFFO0FBQ1RrQixJQUFBQSxlQUFlLEVBQUVILGdCQUFPSSxLQURmO0FBRVRDLElBQUFBLE1BQU0sRUFBRTtBQUZDO0FBekJvQixDQUFsQixDQUFmOztlQStCZTFCLFEiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmbG93XG4gKiBAZm9ybWF0XG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IENvbG9ycyBmcm9tICcuL0NvbG9ycyc7XG5pbXBvcnQgdHlwZSB7Tm9kZX0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IG9wZW5VUkxJbkJyb3dzZXIgZnJvbSAncmVhY3QtbmF0aXZlL0xpYnJhcmllcy9Db3JlL0RldnRvb2xzL29wZW5VUkxJbkJyb3dzZXInO1xuaW1wb3J0IHtWaWV3LCBUZXh0LCBTdHlsZVNoZWV0LCBUb3VjaGFibGVPcGFjaXR5fSBmcm9tICdyZWFjdC1uYXRpdmUnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuY29uc3QgbGlua3MgPSBbXG4gIHtcbiAgICB0aXRsZTogJ1RoZSBCYXNpY3MnLFxuICAgIGxpbms6ICdodHRwczovL2ZhY2Vib29rLmdpdGh1Yi5pby9yZWFjdC1uYXRpdmUvZG9jcy90dXRvcmlhbCcsXG4gICAgZGVzY3JpcHRpb246ICdFeHBsYWlucyBhIEhlbGxvIFdvcmxkIGZvciBSZWFjdCBOYXRpdmUuJyxcbiAgfSxcbiAge1xuICAgIHRpdGxlOiAnU3R5bGUnLFxuICAgIGxpbms6ICdodHRwczovL2ZhY2Vib29rLmdpdGh1Yi5pby9yZWFjdC1uYXRpdmUvZG9jcy9zdHlsZScsXG4gICAgZGVzY3JpcHRpb246XG4gICAgICAnQ292ZXJzIGhvdyB0byB1c2UgdGhlIHByb3AgbmFtZWQgc3R5bGUgd2hpY2ggY29udHJvbHMgdGhlIHZpc3VhbHMuJyxcbiAgfSxcbiAge1xuICAgIHRpdGxlOiAnTGF5b3V0JyxcbiAgICBsaW5rOiAnaHR0cHM6Ly9mYWNlYm9vay5naXRodWIuaW8vcmVhY3QtbmF0aXZlL2RvY3MvZmxleGJveCcsXG4gICAgZGVzY3JpcHRpb246ICdSZWFjdCBOYXRpdmUgdXNlcyBmbGV4Ym94IGZvciBsYXlvdXQsIGxlYXJuIGhvdyBpdCB3b3Jrcy4nLFxuICB9LFxuICB7XG4gICAgdGl0bGU6ICdDb21wb25lbnRzJyxcbiAgICBsaW5rOiAnaHR0cHM6Ly9mYWNlYm9vay5naXRodWIuaW8vcmVhY3QtbmF0aXZlL2RvY3MvY29tcG9uZW50cy1hbmQtYXBpcycsXG4gICAgZGVzY3JpcHRpb246ICdUaGUgZnVsbCBsaXN0IG9mIGNvbXBvbmVudHMgYW5kIEFQSXMgaW5zaWRlIFJlYWN0IE5hdGl2ZS4nLFxuICB9LFxuICB7XG4gICAgdGl0bGU6ICdOYXZpZ2F0aW9uJyxcbiAgICBsaW5rOiAnaHR0cHM6Ly9mYWNlYm9vay5naXRodWIuaW8vcmVhY3QtbmF0aXZlL2RvY3MvbmF2aWdhdGlvbicsXG4gICAgZGVzY3JpcHRpb246XG4gICAgICAnSG93IHRvIGhhbmRsZSBtb3ZpbmcgYmV0d2VlbiBzY3JlZW5zIGluc2lkZSB5b3VyIGFwcGxpY2F0aW9uLicsXG4gIH0sXG4gIHtcbiAgICB0aXRsZTogJ05ldHdvcmtpbmcnLFxuICAgIGxpbms6ICdodHRwczovL2ZhY2Vib29rLmdpdGh1Yi5pby9yZWFjdC1uYXRpdmUvZG9jcy9uZXR3b3JrJyxcbiAgICBkZXNjcmlwdGlvbjogJ0hvdyB0byB1c2UgdGhlIEZldGNoIEFQSSBpbiBSZWFjdCBOYXRpdmUuJyxcbiAgfSxcbiAge1xuICAgIHRpdGxlOiAnSGVscCcsXG4gICAgbGluazogJ2h0dHBzOi8vZmFjZWJvb2suZ2l0aHViLmlvL3JlYWN0LW5hdGl2ZS9oZWxwJyxcbiAgICBkZXNjcmlwdGlvbjpcbiAgICAgICdOZWVkIG1vcmUgaGVscD8gVGhlcmUgYXJlIG1hbnkgb3RoZXIgUmVhY3QgTmF0aXZlIGRldmVsb3BlcnMgd2hvIG1heSBoYXZlIHRoZSBhbnN3ZXIuJyxcbiAgfSxcbiAge1xuICAgIHRpdGxlOiAnRm9sbG93IHVzIG9uIFR3aXR0ZXInLFxuICAgIGxpbms6ICdodHRwczovL3R3aXR0ZXIuY29tL3JlYWN0bmF0aXZlJyxcbiAgICBkZXNjcmlwdGlvbjpcbiAgICAgICdTdGF5IGluIHRvdWNoIHdpdGggdGhlIGNvbW11bml0eSwgam9pbiBpbiBvbiBRJkFzIGFuZCBtb3JlIGJ5IGZvbGxvd2luZyBSZWFjdCBOYXRpdmUgb24gVHdpdHRlci4nLFxuICB9LFxuXTtcblxuY29uc3QgTGlua0xpc3QgPSAoKTogTm9kZSA9PiAoXG4gIDxWaWV3IHN0eWxlPXtzdHlsZXMuY29udGFpbmVyfT5cbiAgICB7bGlua3MubWFwKChpdGVtLCBpbmRleCkgPT4ge1xuICAgICAgcmV0dXJuIChcbiAgICAgICAgPFJlYWN0LkZyYWdtZW50IGtleT17aW5kZXh9PlxuICAgICAgICAgIDxWaWV3IHN0eWxlPXtzdHlsZXMuc2VwYXJhdG9yfSAvPlxuICAgICAgICAgIDxUb3VjaGFibGVPcGFjaXR5XG4gICAgICAgICAgICBhY2Nlc3NpYmlsaXR5Um9sZT17J2J1dHRvbid9XG4gICAgICAgICAgICBvblByZXNzPXsoKSA9PiBvcGVuVVJMSW5Ccm93c2VyKGl0ZW0ubGluayl9XG4gICAgICAgICAgICBzdHlsZT17c3R5bGVzLmxpbmtDb250YWluZXJ9PlxuICAgICAgICAgICAgPFRleHQgc3R5bGU9e3N0eWxlcy5saW5rfT57aXRlbS50aXRsZX08L1RleHQ+XG4gICAgICAgICAgICA8VGV4dCBzdHlsZT17c3R5bGVzLmRlc2NyaXB0aW9ufT57aXRlbS5kZXNjcmlwdGlvbn08L1RleHQ+XG4gICAgICAgICAgPC9Ub3VjaGFibGVPcGFjaXR5PlxuICAgICAgICA8L1JlYWN0LkZyYWdtZW50PlxuICAgICAgKTtcbiAgICB9KX1cbiAgPC9WaWV3PlxuKTtcblxuY29uc3Qgc3R5bGVzID0gU3R5bGVTaGVldC5jcmVhdGUoe1xuICBjb250YWluZXI6IHtcbiAgICBtYXJnaW5Ub3A6IDMyLFxuICAgIHBhZGRpbmdIb3Jpem9udGFsOiAyNCxcbiAgfSxcbiAgbGlua0NvbnRhaW5lcjoge1xuICAgIGZsZXhXcmFwOiAnd3JhcCcsXG4gICAgZmxleERpcmVjdGlvbjogJ3JvdycsXG4gICAganVzdGlmeUNvbnRlbnQ6ICdzcGFjZS1iZXR3ZWVuJyxcbiAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcbiAgICBwYWRkaW5nVmVydGljYWw6IDgsXG4gIH0sXG4gIGxpbms6IHtcbiAgICBmbGV4OiAyLFxuICAgIGZvbnRTaXplOiAxOCxcbiAgICBmb250V2VpZ2h0OiAnNDAwJyxcbiAgICBjb2xvcjogQ29sb3JzLnByaW1hcnksXG4gIH0sXG4gIGRlc2NyaXB0aW9uOiB7XG4gICAgZmxleDogMyxcbiAgICBwYWRkaW5nVmVydGljYWw6IDE2LFxuICAgIGZvbnRXZWlnaHQ6ICc0MDAnLFxuICAgIGZvbnRTaXplOiAxOCxcbiAgICBjb2xvcjogQ29sb3JzLmRhcmssXG4gIH0sXG4gIHNlcGFyYXRvcjoge1xuICAgIGJhY2tncm91bmRDb2xvcjogQ29sb3JzLmxpZ2h0LFxuICAgIGhlaWdodDogMSxcbiAgfSxcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBMaW5rTGlzdDtcbiJdfQ==